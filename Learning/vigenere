# Define the encrypted message and the key used for encryption/decryption
text = 'your encrypted message here'  # Change this to any encrypted text
custom_key = 'yournewkey'             # Change this to a different key

def vigenere(message, key, direction=1):
    """
    Implements the Vigenère cipher for both encryption and decryption.

    Parameters:
        message (str): The input text (either plaintext or ciphertext).
        key (str): The secret key used for encoding/decoding.
        direction (int): 1 for encryption, -1 for decryption.

    Returns:
        str: The transformed message (either encrypted or decrypted).
    """
    
    key_index = 0  # Keeps track of the current position in the key
    alphabet = 'abcdefghijklmnopqrstuvwxyz'  # Define the standard lowercase alphabet
    final_message = ''  # The resulting encrypted or decrypted message

    # Loop through each character in the message (converted to lowercase)
    for char in message.lower():
        
        # If the character is not a letter (e.g., space, punctuation), add it unchanged
        if not char.isalpha():
            final_message += char  
        else:        
            # Select the appropriate letter from the key (cycling through it)
            key_char = key[key_index % len(key)]
            key_index += 1  # Move to the next key character for the next letter
            
            # Compute the shift amount based on the key character
            offset = alphabet.index(key_char)  # Get numerical position of key character
            index = alphabet.find(char)  # Get numerical position of message character
            
            # Apply the shift (forward for encryption, backward for decryption)
            new_index = (index + offset * direction) % len(alphabet)
            
            # Append the transformed character to the final message
            final_message += alphabet[new_index]
    
    return final_message

def encrypt(message, key):
    """
    Encrypts a message using the Vigenère cipher.

    Parameters:
        message (str): The plaintext message to encrypt.
        key (str): The encryption key.

    Returns:
        str: The encrypted message.
    """
    return vigenere(message, key)

def decrypt(message, key):
    """
    Decrypts a message using the Vigenère cipher.

    Parameters:
        message (str): The encrypted text (ciphertext).
        key (str): The decryption key.

    Returns:
        str: The original plaintext message.
    """
    return vigenere(message, key, -1)  # Use -1 direction to reverse the shift

# Display the encrypted text and key being used
print(f'\nEncrypted text: {text}')
print(f'Key: {custom_key}')

# Perform decryption and print the original message
decryption = decrypt(text, custom_key)
print(f'\nDecrypted text: {decryption}\n')
