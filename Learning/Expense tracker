def add_expense(expenses, amount, category):
    """
    Adds a new expense record to the list of expenses.

    Parameters:
        expenses (list): The list where expense records are stored.
        amount (float): The monetary amount of the expense.
        category (str): The category of the expense.

    Returns:
        None
    """
    # Append a dictionary representing the expense to the expenses list.
    expenses.append({'amount': amount, 'category': category})
    
def print_expenses(expenses):
    """
    Prints all expense records in a formatted way.

    Parameters:
        expenses (iterable): A collection of expense records (dictionaries).

    Returns:
        None
    """
    # Loop through each expense and print its details.
    for expense in expenses:
        print(f'Amount: {expense["amount"]}, Category: {expense["category"]}')
    
def total_expenses(expenses):
    """
    Calculates the total amount of all expenses.

    Parameters:
        expenses (list): A list of expense records (each a dictionary).

    Returns:
        float: The sum of all expense amounts.
    """
    # Use map to extract the 'amount' from each expense and sum them up.
    return sum(map(lambda expense: expense['amount'], expenses))
    
def filter_expenses_by_category(expenses, category):
    """
    Filters the expenses by a specified category.

    Parameters:
        expenses (list): A list of expense records.
        category (str): The category to filter expenses by.

    Returns:
        filter: An iterator yielding expenses that match the specified category.
    """
    # Use a lambda function within filter to keep only expenses matching the category.
    return filter(lambda expense: expense['category'] == category, expenses)
    
def main():
    """
    Runs the main expense tracker application.

    Provides a menu for the user to add expenses, list all expenses,
    display the total amount of expenses, filter expenses by category,
    or exit the program.
    """
    expenses = []  # Initialize an empty list to store expense records.
    
    while True:
        # Display the menu options for the expense tracker.
        print('\nExpense Tracker')
        print('1. Add an expense')
        print('2. List all expenses')
        print('3. Show total expenses')
        print('4. Filter expenses by category')
        print('5. Exit')
       
        # Prompt the user to enter their choice.
        choice = input('Enter your choice: ')

        if choice == '1':
            # Option 1: Add a new expense.
            amount = float(input('Enter amount: '))  # Convert input to a float.
            category = input('Enter category: ')
            add_expense(expenses, amount, category)  # Add the expense to the list.

        elif choice == '2':
            # Option 2: List all recorded expenses.
            print('\nAll Expenses:')
            print_expenses(expenses)

        elif choice == '3':
            # Option 3: Calculate and display the total expenses.
            print('\nTotal Expenses: ', total_expenses(expenses))
    
        elif choice == '4':
            # Option 4: Filter expenses by a specific category.
            category = input('Enter category to filter: ')
            print(f'\nExpenses for {category}:')
            # Get an iterator of expenses that match the given category.
            expenses_from_category = filter_expenses_by_category(expenses, category)
            print_expenses(expenses_from_category)

        elif choice == '5':
            # Option 5: Exit the application.
            print('Exiting the program.')
            break  # Terminate the loop to exit the program.

# Entry point for the program.
if __name__ == '__main__':
    main()
